{"version":3,"sources":["react-auth0-wrapper.js","components/Navbar/NavBar.js","components/Jumbotron/Jumbotron.js","components/Top30/Top30.js","api.js","Pages/Login/index.js","components/Profile.js","components/PrivateRoute.js","components/ExternalApi.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","NavBar","_useAuth","isAuthenticated","loginWithRedirect","logout","react_default","a","createElement","className","type","onClick","redirect_uri","origin","console","log","react_router_dom","to","Jumbotron","class","Top30","props","style","width","scope","top30","map","stock","name","price","placeholder","aria-label","aria-describedby","stocks","api","Login","state","this","setState","Top30_Top30","Component","Profile","loading","user","Fragment","src","picture","alt","email","JSON","stringify","PrivateRoute","_ref","component","path","rest","Object","objectWithoutProperties","useEffect","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","appState","targetUrl","stop","apply","arguments","fn","react_router","assign","render","ExternalApi","_useState","useState","_useState2","slicedToArray","showResult","setShowResult","_useState3","_useState4","apiMessage","setApiMessage","getTokenSilently","callApi","token","response","responseData","sent","fetch","headers","Authorization","concat","json","t0","error","App","Navbar_NavBar","exact","components_PrivateRoute","Boolean","hostname","match","ReactDOM","children","_ref$onRedirectCallba","onRedirectCallback","initOptions","setIsAuthenticated","setUser","_useState5","_useState6","auth0Client","setAuth0","_useState7","_useState8","setLoading","_useState9","_useState10","popupOpen","setPopupOpen","auth0FromHook","_ref3","_user","createAuth0Client","search","includes","handleRedirectCallback","getUser","initAuth0","loginWithPopup","_ref4","_callee2","params","_args2","_context2","length","undefined","finish","_ref5","_callee3","_context3","Provider","value","getIdTokenClaims","getTokenWithPopup","domain","config","client_id","clientId","audience","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b1242c0c.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n    window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n    children,\n    onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n    ...initOptions\n}) => {\n    const [isAuthenticated, setIsAuthenticated] = useState();\n    const [user, setUser] = useState();\n    const [auth0Client, setAuth0] = useState();\n    const [loading, setLoading] = useState(true);\n    const [popupOpen, setPopupOpen] = useState(false);\n\n    useEffect(() => {\n        const initAuth0 = async () => {\n            const auth0FromHook = await createAuth0Client(initOptions);\n            setAuth0(auth0FromHook);\n\n            if (window.location.search.includes(\"code=\")) {\n                const { appState } = await auth0FromHook.handleRedirectCallback();\n                onRedirectCallback(appState);\n            }\n\n            const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n            setIsAuthenticated(isAuthenticated);\n\n            if (isAuthenticated) {\n                const user = await auth0FromHook.getUser();\n                setUser(user);\n            }\n\n            setLoading(false);\n        };\n        initAuth0();\n        // eslint-disable-next-line\n    }, []);\n\n    const loginWithPopup = async (params = {}) => {\n        setPopupOpen(true);\n        try {\n            await auth0Client.loginWithPopup(params);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setPopupOpen(false);\n        }\n        const user = await auth0Client.getUser();\n        setUser(user);\n        setIsAuthenticated(true);\n    };\n\n    const handleRedirectCallback = async () => {\n        setLoading(true);\n        await auth0Client.handleRedirectCallback();\n        const user = await auth0Client.getUser();\n        setLoading(false);\n        setIsAuthenticated(true);\n        setUser(user);\n    };\n    return (\n        <Auth0Context.Provider\n            value={{\n                isAuthenticated,\n                user,\n                loading,\n                popupOpen,\n                loginWithPopup,\n                handleRedirectCallback,\n                getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n                loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n                getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n                getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n                logout: (...p) => auth0Client.logout(...p)\n            }}\n        >\n            {children}\n        </Auth0Context.Provider>\n    );\n};","import React from \"react\";\nimport { useAuth0 } from \"../../react-auth0-wrapper\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n\nconst NavBar = () => {\n    const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n\n            {!isAuthenticated && (\n                <button type=\"button mr-auto\" className=\"btn btn-success\"\n                    onClick={() =>\n                        loginWithRedirect({\n                            redirect_uri: window.location.origin\n                        })\n                    }>\n                    <a className=\"navbar-brand\">Login</a>\n                </button>\n            )}\n\n            {isAuthenticated && <button type=\"button\" className=\"btn btn-success\"\n                onClick={() => console.log(\"This should load top 30\")}>\n                <a className=\"navbar-brand\">Top 30</a>\n            </button>}\n\n            {isAuthenticated && <button type=\"button\" className=\"btn btn-success\"\n                onClick={() => console.log(\"This should load portfolios\")}>\n                <a className=\"navbar-brand\">Portfolios</a>\n            </button>}\n\n            {isAuthenticated && <button type=\"button\" className=\"btn btn-success\"\n                onClick={() => logout()}>\n\n                <a className=\"navbar-brand\">Log Out</a>\n            </button>}\n\n            {isAuthenticated && <button type=\"button\" className=\"btn btn-success\"\n                //Something needs to happen with the onClick below\n                onClick={() => console.log(\"Hello World\")}>\n                <a className=\"navbar-brand\">View Top 30 List</a>\n            </button>}\n\n            {isAuthenticated && <button type=\"button\" className=\"btn btn-success\"\n                //Something needs to happen with the onClick below\n                onClick={() => console.log(\"Hello World\")}>\n                <a className=\"navbar-brand\">View Portfolios</a>\n            </button>}\n\n            {isAuthenticated && (\n                <span>\n                    <Link to=\"/home\">Home</Link>\n                    <Link to=\"/profile\">Profile</Link>\n                    <Link to=\"/external-api\">External API</Link>\n                </span>\n            )}\n            \n\n        </nav >\n    );\n};\n\nexport default NavBar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n    return (\n        <div className=\"jumbotron text-center text-success\">\n            <h1>Stock Filter 3</h1>\n            <h4 class=\"font-italic\">\"The most important quality for an investor is temperament, not intellect. You need a temperament that neither derives great pleasure from being with the crowd or against the crowd.\"</h4>\n            <h5 class=\"font-italic\">-Warren Buffet</h5>\n        </div>\n    );\n}\n\nexport default Jumbotron;","import React from \"react\";\n\n\n\nfunction Top30(props) {\n    return (\n        <div className=\"card\" style={{width: \"40rem\"}}>\n            <div className=\"card-body\" >\n                <h5 className=\"card-title\">Card title</h5>\n                <table className=\"table\" >\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">Stock Name</th>\n                            <th scope=\"col\">Stock Price</th>\n                            <th scope=\"col\">Amount</th>\n                            {/* <th scope=\"col\">Add</th> */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {/* <tr>\n                            <th scope=\"row\">1</th>\n                            <td>Example Stock</td>\n                            <td>Example Amount</td>\n                            <td>Add</td>\n                        </tr> */}\n                        {props.top30.map(stock => (\n                            <tr>\n                                <td>\n                                    {stock.name}\n                                </td>\n                                <td>\n                                    {stock.price}\n                                </td>\n                                <td>\n                                    <div className=\"input-group mb-3\">\n                                        <input name={stock.name} type=\"text\" placeholder=\"Enter Shares\" aria-label=\"Enter Shares\" aria-describedby=\"basic-addon1\" />\n                                    </div>\n                                    <button type=\"button\" className=\"btn btn-success\">Add</button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n};\n\n\nexport default Top30;","const stocks = [{\n    name: \"target\",\n    price: 100\n},\n{\n    name: \"3m\",\n    price: 200\n}];\n\nexport default { \n    getTop30: function() {\n        return stocks;\n    }\n}","import React, { Component } from \"react\";\n// import Jumbotron from \"../../components/Jumbotron/Jumbotron.js\";\n// import { useAuth0 } from \"../../react-auth0-wrapper\";\nimport Top30 from \"../../components/Top30/Top30\";\n// import { Auth0Provider } from \"../../react-auth0-wrapper\";\nimport api from \"../../api.js\";\n\nclass Login extends Component {\n    state = {\n        name: \"\",\n        price: \"\"\n    };\n\n    componentWillMount() {\n        // api.getTop30()\n        //     .then(res => this.setState({top30: res}))\n        //     .then(console.log(this.state.top30)) \n        this.setState({ top30: api.getTop30() });\n    }\n\n    render() {\n\n        return (\n            <div>\n                {/* {Auth0Provider.isAuthenticated ?\n                    <Top30 \n                    top30 = {this.state.top30}\n                    /> :\n                    <Jumbotron />\n                } */}\n                <Top30\n                    top30={this.state.top30}\n                /> \n                {/* <Jumbotron /> */}\n            </div>\n        );\n    };\n};\n\n\n// const Login = () => {\n//     const { isAuthenticated } = useAuth0();\n//     return (\n//         <div>\n//         {isAuthenticated ?\n//             <Top30 /> :\n//             <Jumbotron />\n//         }\n//         </div>\n//     );\n// }\n\nexport default Login;","import React from \"react\";\nimport { useAuth0 } from \"../react-auth0-wrapper\";\n\n\nconst Profile = () => {\n    const { loading, user } = useAuth0();\n\n    if (loading || !user) {\n        return \"Loading...\";\n    }\n\n    return (\n        <>\n            <img src={user.picture} alt=\"Profile\" />\n\n            <h2>{user.name}</h2>\n            <p>{user.email}</p>\n            <code>{JSON.stringify(user, null, 2)}</code>\n        </>\n    );\n};\n\nexport default Profile;","import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-wrapper\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n    const { isAuthenticated, loginWithRedirect } = useAuth0();\n\n    useEffect(() => {\n        const fn = async () => {\n            if (!isAuthenticated) {\n                await loginWithRedirect({\n                    redirect_uri: window.location.origin,\n                    appState: { targetUrl: path }\n                });\n            }\n        };\n        fn();\n    }, [isAuthenticated, loginWithRedirect, path]);\n\n    const render = props => <Component {...props} />;\n\n    return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;","import React, { useState } from \"react\";\nimport { useAuth0 } from \"../react-auth0-wrapper\";\n\nconst ExternalApi = () => {\n    const [showResult, setShowResult] = useState(false);\n    const [apiMessage, setApiMessage] = useState(\"\");\n    const { getTokenSilently } = useAuth0();\n\n    const callApi = async () => {\n        try {\n            const token = await getTokenSilently();\n\n            const response = await fetch(\"/api/external\", {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            });\n\n            const responseData = await response.json();\n\n            setShowResult(true);\n            setApiMessage(responseData);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n        <>\n            <h1>External API</h1>\n            <button onClick={callApi}>Ping API</button>\n            {showResult && <code>{JSON.stringify(apiMessage, null, 2)}</code>}\n        </>\n    );\n};\n\nexport default ExternalApi;","import React from 'react';\nimport NavBar from \"./components/Navbar/NavBar\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\n// import Body from \"./components/Body/Body\";\n// import Card30 from \"./components/Card30/Card30\";\n// import Profs from \"./components/Profs/Profs\";\n// import Input from \"./components/Input/Input\";\nimport Login from \"./Pages/Login\";\nimport \"./style.css\";\n\n// import the React Router components, and the Profile page component\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Profile from \"./components/Profile\";\n\n// import the PrivateRoute component\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport ExternalApi from \"./components/ExternalApi\";\n\n// import logo from './logo.svg';\n// import './App.css';\n\n// default code\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// auth0 code\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* New - use BrowserRouter to provide access to /profile */}\n      <BrowserRouter>\n        <header>\n          <NavBar />\n        </header>\n        <Switch>\n          {/*route must have 'exact' parameter specified */}\n          <Route path=\"/\" exact component={Jumbotron} />\n          <PrivateRoute path=\"/home\" component={Login} />\n          <PrivateRoute path=\"/profile\" component={Profile} />\n          {/* NEW - add a route to the ExternalApi component */}\n          <PrivateRoute path=\"/external-api\" component={ExternalApi} />\n        </Switch>\n      </BrowserRouter>\n              {/* <Jumbotron /> */}\n              {/* <Body /> */}\n              {/* <Card30 /> */}\n              {/* <Input /> */}\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Auth0Provider } from \"./react-auth0-wrapper\";\nimport config from \"./auth_config.json\";\n\n\n//import api from \"eodhistoricaldata-api\";\n//import \"./styles.css\";\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n// // import React from \"react\";\n// // import ReactDOM from \"react-dom\";\n\nconst onRedirectCallback = appState => {\n    window.history.replaceState(\n        {},\n        document.title,\n        appState && appState.targetUrl\n            ? appState.targetUrl\n            : window.location.pathname\n    );\n};\n\nReactDOM.render(\n    <Auth0Provider\n        domain={config.domain}\n        client_id={config.clientId}\n        audience={config.audience}     // NEW - specify the audience value\n        onRedirectCallback={onRedirectCallback}\n    >\n        <App />\n    </Auth0Provider>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}